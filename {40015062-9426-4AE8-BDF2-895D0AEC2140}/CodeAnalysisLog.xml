<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\Users\jhpark\AppData\Local\Temp\tmp6197.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="DB" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DbOpen()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-12-08 19:42:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\Project\05.Solko\xPMWorks\Update\App_Code" File="DataBase.cs" Line="23">'DB.DbOpen()'은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryInsert(System.Data.SqlClient.SqlConnection,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-12-08 19:42:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\Project\05.Solko\xPMWorks\Update\App_Code" File="DataBase.cs" Line="55">'DB.QueryInsert(SqlConnection, string)'은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Issue>
            </Message>
            <Message TypeName="보안상 취약한 부분이 있는지 SQL 쿼리를 검토하십시오." Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-12-08 19:42:57Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\Project\05.Solko\xPMWorks\Update\App_Code" File="DataBase.cs" Line="50">'DB.QueryInsert(SqlConnection, string)'의 'SqlCommand.CommandText.set(string)'에 전달된 쿼리 문자열에 다음 'Query' 변수가 포함되었을 수 있습니다. 이러한 변수가 사용자 입력을 통해 작성될 수 있는 경우 문자열 연결로 쿼리를 작성하는 대신 저장 프로시저 또는 매개 변수화된 SQL 쿼리를 사용해 보십시오.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QueryReader(System.Data.SqlClient.SqlConnection,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2017-12-08 19:42:57Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="D:\Project\05.Solko\xPMWorks\Update\App_Code" File="DataBase.cs" Line="39">'DB.QueryReader(SqlConnection, string)'은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Issue>
            </Message>
            <Message TypeName="보안상 취약한 부분이 있는지 SQL 쿼리를 검토하십시오." Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-12-08 19:42:57Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\Project\05.Solko\xPMWorks\Update\App_Code" File="DataBase.cs" Line="34">'DB.QueryReader(SqlConnection, string)'의 'SqlCommand.CommandText.set(string)'에 전달된 쿼리 문자열에 다음 'Query' 변수가 포함되었을 수 있습니다. 이러한 변수가 사용자 입력을 통해 작성될 수 있는 경우 문자열 연결로 쿼리를 작성하는 대신 저장 프로시저 또는 매개 변수화된 SQL 쿼리를 사용해 보십시오.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\jhpark\AppData\Local\Temp\tmp6197.tmp.cadir\bin\App_Web_kkqtzluk.dll">
   <Modules>
    <Module Name="app_web_kkqtzluk.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Update" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnAddMasterFile_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="개체를 여러 번 삭제하지 마십시오." Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-12-08 19:42:57Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Project\05.Solko\xPMWorks\Update" File="Update.aspx.cs" Line="240">'dbReader' 개체는 'Update.btnAddMasterFile_Click(object, EventArgs)' 메서드에서 여러 번 삭제할 수 있습니다. System.ObjectDisposedException이 생성되지 않도록 개체에 대해 Dispose를 여러 번 호출하지 마십시오.: Lines: 240</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>스택 정보를 유지하도록 다시 throw하십시오.</Name>
   <Description>catch한 예외가 다시 발생하는 경우 IL의 다시 throw 명령을 사용하여 원래 스택 정보를 유지하십시오.</Description>
   <Resolution Name="Default">{0}은(는) catch한 예외를 다시 throw하고 인수로 명시적으로 지정합니다. 예외가 처음 발생된 스택 위치를 유지하려면 인수 없이 'throw'를 대신 사용하십시오.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="개체를 여러 번 삭제하지 마십시오." Category="Microsoft.Usage" CheckId="CA2202">
   <Name>개체를 여러 번 삭제하지 마십시오.</Name>
   <Description>올바로 구현된 Dispose 메서드는 예외를 throw하지 않고 여러 번 호출할 수 있습니다. 그러나 확실하지는 않으므로 System.ObjectDisposedException이 생성되지 않도록 개체에 대해 Dispose를 여러 번 호출하지 마십시오.</Description>
   <Resolution Name="Default">{0} 개체는 {1} 메서드에서 여러 번 삭제할 수 있습니다. System.ObjectDisposedException이 생성되지 않도록 개체에 대해 Dispose를 여러 번 호출하지 마십시오.: Lines: 240</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="보안상 취약한 부분이 있는지 SQL 쿼리를 검토하십시오." Category="Microsoft.Security" CheckId="CA2100">
   <Name>보안상 취약한 부분이 있는지 SQL 쿼리를 검토하십시오.</Name>
   <Description>사용자 입력을 통해 작성된 SQL 명령 문자열은 SQL 삽입 공격에 취약합니다. Microsoft SQL Server 및 기타 데이터베이스 서버는 저장 프로시저 및 매개 변수화된 SQL 쿼리를 지원하며, 이 기능은 삽입 공격의 위험을 줄여 줍니다.</Description>
   <Resolution Name="WithNonLiterals">{1}의 {0}에 전달된 쿼리 문자열에 다음 {2} 변수가 포함되었을 수 있습니다. 이러한 변수가 사용자 입력을 통해 작성될 수 있는 경우 문자열 연결로 쿼리를 작성하는 대신 저장 프로시저 또는 매개 변수화된 SQL 쿼리를 사용해 보십시오.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">범주</String>
  <String Key="Certainty">확신도</String>
  <String Key="CollapseAll">모두 축소</String>
  <String Key="CheckId">확인 ID</String>
  <String Key="Error">오류</String>
  <String Key="Errors">개 오류</String>
  <String Key="ExpandAll">모두 확장</String>
  <String Key="Help">도움말</String>
  <String Key="Line">줄</String>
  <String Key="Messages">메시지</String>
  <String Key="LocationNotStoredInPdb">[Pdb에 위치가 저장되지 않음]</String>
  <String Key="Project">프로젝트</String>
  <String Key="Resolution">확인</String>
  <String Key="Rule">규칙</String>
  <String Key="RuleFile">규칙 파일</String>
  <String Key="RuleDescription">규칙 설명</String>
  <String Key="Source">소스</String>
  <String Key="Status">상태</String>
  <String Key="Target">대상</String>
  <String Key="Warning">경고</String>
  <String Key="Warnings">경고</String>
  <String Key="ReportTitle">코드 분석 보고서</String>
 </Localized>
</FxCopReport>
